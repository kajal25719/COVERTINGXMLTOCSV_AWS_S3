# -*- coding: utf-8 -*-
"""steeleye.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WKycNehF5SEOs1JHWqFQGfzg5AeCI6H5
"""

from xml.etree import ElementTree as ET
import pandas as pd
import csv

cols=["checksum","download_link","publication_date","_root_","published_instrument_file_id","id","file_name","file_type","_version_","timestamp"]
rows=[]
csvfile = open("DLTINS_20210117_01of01.csv",'w',encoding='utf-8')
csvfile_writer = csv.writer(csvfile)


# PARSE XML
tree= ET.parse("DLTINS_20210117_01of01.xml")
root = tree.getroot()
for response in root:
  if(response):
    checksum = response.find("checksum")
    download_link = response.find("download_link")
    publication_date = response.find("publication_date")
    _root_ = response.find("_root_")
    published_instrument_file_id = response.find("published_instrument_file_id")
    id = response.find("id")
    file_name = response.find("file_name")
    file_type = response.find("file_type")
    _version_ = response.find("_version_")
    timestamp = response.find("timestamp")
    
    rows.append({"checksum":checksum,
                "download_link":download_link,
                "publication_date":publication_date,
                "_root_":_root_,
                "published_instrument_file_id":published_instrument_file_id,
                "id":id,
                "file_name":file_name,
                "file_type":file_type,
                "_version_":_version_,
                "timestamp":timestamp})

df = pd.DataFrame(rows, columns = cols)

# write dataframe to csv
df.to_csv('DLTINS_20210117_01of01.csv')

df.rename(
    columns=({ '6': 'FinInstrmGnlAttrbts.Id', '7': 'FinInstrmGnlAttrbts.FullNm','9':'FinInstrmGnlAttrbts.ClssfctnTp','10':'FinInstrmGnlAttrbts.ClssfctnTp','timestamp': 'FinInstrmGnlAttrbts.CmmdtyDerivInd','8':'FinInstrmGnlAttrbts.ClssfctnTp','timestamp': 'FinInstrmGnlAttrbts.CmmdtyDerivInd','file_type': 'FinInstrmGnlAttrbts.NtnlCcy','1':'Issr'}), 
    inplace=True,
)
df.head()

df.columns

!pip install boto

!pip3 install boto3 botocore awscli --ignore-installed

import logging
import boto3
from botocore.exceptions import ClientError


def create_bucket(steeleye_bucket, region=None):
  try:
        if region is None:
            s3_client = boto3.client('s3')
            s3_client.create_bucket(Bucket=steeleye_bucket)
        else:
            s3_client = boto3.client('s3', region_name=region)
            location = {'LocationConstraint': region}
            s3_client.create_bucket(Bucket=steeleye_bucket,
                                    CreateBucketConfiguration=location)
  except ClientError as e:
        logging.error(e)
        return False
        return True

s3 = boto3.resource('s3',
                    aws_access_key_id='AKIA24PZUOTZPYPJNGEA',
                    aws_secret_access_key='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' )

response = s3.list_buckets()
s3 = boto3.resource('s3') 
the_bucket = s3.Bucket('myassighment')
#response = s3.list_buckets()

# Output the bucket names
print('Existing buckets:')
for bucket in response['Buckets']:
    print(f'  {bucket["Name"]}')

s3.meta.client.upload_file('/content/DLTINS_20210117_01of01.csv', 'myassighment', 'DLTINS_20210117_01of01.csv')